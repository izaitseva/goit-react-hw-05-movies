{"version":3,"file":"static/js/415.6112008c.chunk.js","mappings":"wSAEMA,EAAG,+BAEHC,EAAM,mCACNC,EAAU,UAAMF,EAAN,iCAAkCC,GAIrCE,EAAoB,SAACC,GAC9B,OAAOC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAAiCE,GAC3C,EAEYE,EAAsB,WAC/B,OAAOD,EAAAA,EAAAA,IAAA,UAXW,+CAWX,oBAAsCJ,GAChD,EAEYM,EAAiB,SAACC,GAC3B,OAAOH,EAAAA,EAAAA,IAAA,UAAaL,EAAb,kBAA0BQ,EAA1B,oBAA6CP,GACvD,EAEYQ,EAAW,SAACC,GACrB,MAAM,GAAN,OAfc,mCAed,OAAsBA,EACzB,EAEYC,EAAkB,SAACH,GAC5B,OAAOH,EAAAA,EAAAA,IAAA,UAAaL,EAAb,kBAA0BQ,EAA1B,4BAAqDP,GAC/D,EAEYW,EAAU,SAACJ,GACpB,OAAOH,EAAAA,EAAAA,IAAA,UAAaL,EAAb,kBAA0BQ,EAA1B,4BAAqDP,GAC/D,C,kGC5Bc,SAASY,IACpB,IAAMC,GAAWC,EAAAA,EAAAA,MAQjB,OANAC,EAAAA,EAAAA,YAAU,WACNC,YAAW,WACPH,EAAS,IACZ,GAAE,KACN,KAGG,+CAEP,C,8ICTc,SAASI,IACpB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KAYA,OAVAP,EAAAA,EAAAA,YAAU,YACNV,EAAAA,EAAAA,MACKkB,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACLJ,EAAUI,EAAKC,QAClB,IACAC,OAAM,WACHJ,GAAS,EACZ,GACR,GAAE,KAGC,2BACKD,IAAS,SAAC,UAAD,KACV,4CACA,wBACKF,EAAOQ,KAAI,SAAAC,GAAK,aACb,yBACI,SAAC,KAAD,CAAMC,IAAIC,EAAAA,EAAAA,IAAaC,EAAAA,EAAAA,aAAoB,CAAExB,QAASqB,EAAMI,KAA5D,mBAAoEJ,EAAMK,aAA1E,QAAmFL,EAAMM,kBADpFN,EAAMI,GADF,QAShC,C","sources":["components/API/moviesAPI.jsx","components/components/NotFound.jsx","pages/Home.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst URL = `https://api.themoviedb.org/3`\nconst TOP_RATED_URL = \"https://api.themoviedb.org/3/movie/top_rated\";\nconst KEY = \"c86b3c21f50eab5c7ad4f0c864f19af2\";\nconst SEARCH_URL = `${URL}/search/movie?api_key=${KEY}`;\n\nconst IMAGE_URL = \"https://image.tmdb.org/t/p/w500\";\n\nexport const fetchSearchMovies = (movieSearch) => {\n    return axios.get(`${SEARCH_URL}&query=${movieSearch}`);\n}\n\nexport const fetchTopRatedMovies = () => {\n    return axios.get(`${TOP_RATED_URL}?api_key=${KEY}`)\n}\n\nexport const fetchMovieById = (movieId) => {\n    return axios.get(`${URL}/movie/${movieId}?api_key=${KEY}`)\n}\n\nexport const imageUrl = (imagePath) => {\n    return `${IMAGE_URL}${imagePath}`;\n}\n\nexport const getMovieReviews = (movieId) => {\n    return axios.get(`${URL}/movie/${movieId}/reviews?api_key=${KEY}`);\n}\n\nexport const getCast = (movieId) => {\n    return axios.get(`${URL}/movie/${movieId}/credits?api_key=${KEY}`);\n}","import { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function NotFound() {\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        setTimeout(() => {\n            navigate(\"/\")\n        }, 1500);\n    })\n\n    return (\n        <h1> Page is not found </h1>\n    )\n}","import { fetchTopRatedMovies } from \"components/API/moviesAPI\"\nimport NotFound from \"components/components/NotFound\";\nimport { paths } from \"components/paths/paths\";\nimport { useEffect, useState } from \"react\"\nimport { generatePath, Link } from \"react-router-dom\";\n\nexport default function Home() {\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n        fetchTopRatedMovies()\n            .then(({ data }) => {\n                setMovies(data.results)\n            })\n            .catch(() => {\n                setError(true)\n            })\n    }, []);\n\n    return (\n        <div>\n            {error && <NotFound />}\n            <h2>Trending Today</h2>\n            <ul>\n                {movies.map(movie => (\n                    <li key={movie.id}>\n                        <Link to={generatePath(paths.movieDetails, { movieId: movie.id })}>{movie.title ?? movie.original_title}</Link>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    )\n\n}"],"names":["URL","KEY","SEARCH_URL","fetchSearchMovies","movieSearch","axios","fetchTopRatedMovies","fetchMovieById","movieId","imageUrl","imagePath","getMovieReviews","getCast","NotFound","navigate","useNavigate","useEffect","setTimeout","Home","useState","movies","setMovies","error","setError","then","data","results","catch","map","movie","to","generatePath","paths","id","title","original_title"],"sourceRoot":""}
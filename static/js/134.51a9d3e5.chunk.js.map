{"version":3,"file":"static/js/134.51a9d3e5.chunk.js","mappings":"wSAEMA,EAAG,+BAEHC,EAAM,mCACNC,EAAU,UAAMF,EAAN,iCAAkCC,GAIrCE,EAAoB,SAACC,GAC9B,OAAOC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAAiCE,GAC3C,EAEYE,EAAsB,WAC/B,OAAOD,EAAAA,EAAAA,IAAA,UAXW,+CAWX,oBAAsCJ,GAChD,EAEYM,EAAiB,SAACC,GAC3B,OAAOH,EAAAA,EAAAA,IAAA,UAAaL,EAAb,kBAA0BQ,EAA1B,oBAA6CP,GACvD,EAEYQ,EAAW,SAACC,GACrB,MAAM,GAAN,OAfc,mCAed,OAAsBA,EACzB,EAEYC,EAAkB,SAACH,GAC5B,OAAOH,EAAAA,EAAAA,IAAA,UAAaL,EAAb,kBAA0BQ,EAA1B,4BAAqDP,GAC/D,EAEYW,EAAU,SAACJ,GACpB,OAAOH,EAAAA,EAAAA,IAAA,UAAaL,EAAb,kBAA0BQ,EAA1B,4BAAqDP,GAC/D,C,kGC5Bc,SAASY,IACpB,IAAMC,GAAWC,EAAAA,EAAAA,MAQjB,OANAC,EAAAA,EAAAA,YAAU,WACNC,YAAW,WACPH,EAAS,IACZ,GAAE,KACN,KAGG,+CAEP,C,8ICTc,SAASI,IAEpB,OAAsCC,EAAAA,EAAAA,IAAgB,CAAEC,MAAO,KAA/D,eAAOhB,EAAP,KAAoBiB,EAApB,KACA,GAA0CC,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOF,EAAP,KAAcK,EAAd,KACA,GAA0BH,EAAAA,EAAAA,WAAS,GAAnC,eAAOI,EAAP,KAAcC,EAAd,KAEMC,EAAOxB,EAAYyB,IAAI,SA6B7B,OAbAb,EAAAA,EAAAA,YAAU,YACNb,EAAAA,EAAAA,IAAkByB,GACbE,MAAK,SAAAC,GACF,IAAMC,EAASD,EAAIE,KAAKC,QAExBC,QAAQC,IAAIJ,GACZR,EAAiBQ,EACpB,IACAK,OAAM,WACHV,GAAS,EACZ,GACR,GAAE,CAACC,KAGA,0BACI,2BACKF,IAAS,SAAC,UAAD,KACV,kBAAMY,OAAO,MAAb,WACI,kBAAOC,YAAY,6BAA6BC,SAhCrC,SAAAC,GACvB,IAAMC,EAAiBD,EAAEE,OAAOC,MAAMC,cACtCpB,EAASiB,EACZ,EA6B6FE,MAAOxB,KACrF,mBAAQ0B,KAAK,SAASC,QA5BjB,WAEI,KAAjB3B,EAAM4B,QAGV3B,EAAe,CAAED,MAAAA,GACpB,EAsBe,wBAEJ,wBAEQG,EAAc0B,KAAI,SAAAC,GAAU,IAAD,EAEvB,OACI,yBACI,SAAC,KAAD,CAAMC,IAAIC,EAAAA,EAAAA,IAAaC,EAAAA,EAAAA,aAAoB,CAAE7C,QAAS0C,EAAMI,KAA5D,mBAAoEJ,EAAMK,aAA1E,QAAmFL,EAAMM,kBADpFN,EAAMI,GAItB,UAMxB,C","sources":["components/API/moviesAPI.jsx","components/components/NotFound.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst URL = `https://api.themoviedb.org/3`\nconst TOP_RATED_URL = \"https://api.themoviedb.org/3/movie/top_rated\";\nconst KEY = \"c86b3c21f50eab5c7ad4f0c864f19af2\";\nconst SEARCH_URL = `${URL}/search/movie?api_key=${KEY}`;\n\nconst IMAGE_URL = \"https://image.tmdb.org/t/p/w500\";\n\nexport const fetchSearchMovies = (movieSearch) => {\n    return axios.get(`${SEARCH_URL}&query=${movieSearch}`);\n}\n\nexport const fetchTopRatedMovies = () => {\n    return axios.get(`${TOP_RATED_URL}?api_key=${KEY}`)\n}\n\nexport const fetchMovieById = (movieId) => {\n    return axios.get(`${URL}/movie/${movieId}?api_key=${KEY}`)\n}\n\nexport const imageUrl = (imagePath) => {\n    return `${IMAGE_URL}${imagePath}`;\n}\n\nexport const getMovieReviews = (movieId) => {\n    return axios.get(`${URL}/movie/${movieId}/reviews?api_key=${KEY}`);\n}\n\nexport const getCast = (movieId) => {\n    return axios.get(`${URL}/movie/${movieId}/credits?api_key=${KEY}`);\n}","import { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function NotFound() {\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        setTimeout(() => {\n            navigate(\"/\")\n        }, 1500);\n    })\n\n    return (\n        <h1> Page is not found </h1>\n    )\n}","import { fetchSearchMovies } from \"components/API/moviesAPI\";\nimport NotFound from \"components/components/NotFound\";\nimport { paths } from \"components/paths/paths\";\nimport { useEffect, useState } from \"react\"\nimport { generatePath, Link, useSearchParams } from \"react-router-dom\";\n\nexport default function Movies() {\n\n    const [movieSearch, setMovieSearch] = useSearchParams({ query: \"\" });\n    const [searchResults, setSearchResults] = useState([]);\n    const [query, setQuery] = useState(\"\");\n    const [error, setError] = useState(false);\n\n    const link = movieSearch.get(\"query\");\n\n    const handleChangeSearch = e => {\n        const newSearchValue = e.target.value.toLowerCase();\n        setQuery(newSearchValue);\n    }\n\n    const handleSubmit = () => {\n\n        if (query.trim() === '') {\n            return;\n        }\n        setMovieSearch({ query });\n    }\n\n\n    useEffect(() => {\n        fetchSearchMovies(link)\n            .then(res => {\n                const movies = res.data.results;\n\n                console.log(movies);\n                setSearchResults(movies);\n            })\n            .catch(() => {\n                setError(true);\n            });\n    }, [link])\n\n    return (\n        <div>\n            <div>\n                {error && <NotFound />}\n                <form action=\"URL\">\n                    <input placeholder=\"Let's find a movie for you\" onChange={handleChangeSearch} value={query}></input>\n                    <button type=\"button\" onClick={handleSubmit}>Search</button>\n                </form>\n                <ul>\n                    {\n                        searchResults.map(movie => {\n\n                            return (\n                                <li key={movie.id}>\n                                    <Link to={generatePath(paths.movieDetails, { movieId: movie.id })}>{movie.title ?? movie.original_title}</Link>\n                                </li>\n                            )\n                        })\n                    }\n                </ul>\n            </div>\n        </div>\n    )\n}"],"names":["URL","KEY","SEARCH_URL","fetchSearchMovies","movieSearch","axios","fetchTopRatedMovies","fetchMovieById","movieId","imageUrl","imagePath","getMovieReviews","getCast","NotFound","navigate","useNavigate","useEffect","setTimeout","Movies","useSearchParams","query","setMovieSearch","useState","searchResults","setSearchResults","setQuery","error","setError","link","get","then","res","movies","data","results","console","log","catch","action","placeholder","onChange","e","newSearchValue","target","value","toLowerCase","type","onClick","trim","map","movie","to","generatePath","paths","id","title","original_title"],"sourceRoot":""}
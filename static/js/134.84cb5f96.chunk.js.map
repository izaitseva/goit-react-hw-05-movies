{"version":3,"file":"static/js/134.84cb5f96.chunk.js","mappings":"kLA+BA,IA3BkB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OAEXC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,wBACKF,EAAOG,KAAI,SAAAC,GAAK,aACb,yBACI,SAAC,KAAD,CAAMC,IAAIC,EAAAA,EAAAA,IAAaC,EAAAA,EAAAA,aAAoB,CAAEC,QAASJ,EAAMK,KAAOC,MAAO,CAAEC,KAAMV,GAAlF,mBACKG,EAAMQ,aADX,QACoBR,EAAMS,kBAFrBT,EAAMK,GADF,KAS5B,C,2LCjBKK,EAAG,+BAEHC,EAAM,mCACNC,EAAU,UAAMF,EAAN,iCAAkCC,GAIrCE,EAAoB,SAACC,GAC9B,OAAOC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAAiCE,GAC3C,EAEYE,EAAsB,WAC/B,OAAOD,EAAAA,EAAAA,IAAA,UAXW,+CAWX,oBAAsCJ,GAChD,EAEYM,EAAe,SAACb,GACzB,OAAOW,EAAAA,EAAAA,IAAA,UAAaL,EAAb,kBAA0BN,EAA1B,oBAA6CO,GACvD,EAEYO,EAAW,SAACC,GACrB,MAAM,GAAN,OAfc,mCAed,OAAsBA,EACzB,EAEYC,EAAkB,SAAChB,GAC5B,OAAOW,EAAAA,EAAAA,IAAA,UAAaL,EAAb,kBAA0BN,EAA1B,4BAAqDO,GAC/D,EAEYU,EAAU,SAACjB,GACpB,OAAOW,EAAAA,EAAAA,IAAA,UAAaL,EAAb,kBAA0BN,EAA1B,4BAAqDO,GAC/D,C,+JCzBc,SAASW,IAEpB,OAAsCC,EAAAA,EAAAA,IAAgB,CAAEC,MAAO,KAA/D,eAAOV,EAAP,KAAoBW,EAApB,KAEA,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOF,EAAP,KAAcG,EAAd,KACA,GAA0BD,EAAAA,EAAAA,WAAS,GAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KACA,GAA4BL,EAAAA,EAAAA,UAAS,IAArC,eAAO9B,EAAP,KAAeoC,EAAf,KAEMC,EAAOnB,EAAYoB,IAAI,SAgC7B,OAhBAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAe,mCAAG,sGAEhBL,GAAW,GAFK,UAGOlB,EAAAA,EAAAA,IAAkBoB,GAHzB,gBAGRI,EAHQ,EAGRA,KACRL,EAAUK,EAAKC,SAJC,gDAOhBT,GAAS,GAPO,yBAShBE,GAAW,GATK,4EAAH,qDAYrBK,GACH,GAAE,CAACH,KAGA,0BACI,2BACKL,IAAS,SAAC,UAAD,IACTE,IAAW,4CACZ,kBAAMS,SA9BG,SAACC,GAClBA,EAAEC,iBAEmB,KAAjBjB,EAAMkB,QAGVjB,EAAe,CAAED,MAAAA,GACpB,EAuBW,WACI,kBAAOmB,YAAY,6BAA6BC,SApCrC,SAAAJ,GACvB,IAAMK,EAAiBL,EAAEM,OAAOC,MAAMC,cACtCrB,EAASkB,EACZ,EAiC6FE,MAAOvB,KACrF,mBAAQyB,KAAK,SAAb,uBAEHrD,IAAU,SAAC,IAAD,CAAWA,OAAQA,QAI7C,C,iGCzDc,SAASsD,IAEpB,OACI,4BACI,0BACI,SAAC,KAAD,CAAMjD,GAAIE,EAAAA,EAAAA,KAAV,0BAEJ,iDACA,gBAAKgD,IAAI,+EAA+EC,IAAI,YAIvG,C","sources":["components/components/MovieList.jsx","moviesAPI.jsx","pages/Movies.jsx","pages/NotFound.jsx"],"sourcesContent":["import { paths } from \"components/paths/paths\";\nimport PropTypes from \"prop-types\";\nimport { generatePath, Link, useLocation } from \"react-router-dom\";\n\nconst MovieList = ({ movies }) => {\n\n    const location = useLocation();\n\n    return (\n        <ul>\n            {movies.map(movie => (\n                <li key={movie.id}>\n                    <Link to={generatePath(paths.movieDetails, { movieId: movie.id })} state={{ from: location }}>\n                        {movie.title ?? movie.original_title}\n                    </Link>\n                </li>\n            ))}\n        </ul>\n    )\n}\n\nMovieList.propTypes = {\n    movies: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            title: PropTypes.string,\n            original_title: PropTypes.string,\n        })\n    ).isRequired,\n};\n\nexport default MovieList;","import axios from \"axios\";\n\nconst URL = `https://api.themoviedb.org/3`\nconst TOP_RATED_URL = \"https://api.themoviedb.org/3/movie/top_rated\";\nconst KEY = \"c86b3c21f50eab5c7ad4f0c864f19af2\";\nconst SEARCH_URL = `${URL}/search/movie?api_key=${KEY}`;\n\nconst IMAGE_URL = \"https://image.tmdb.org/t/p/w500\";\n\nexport const fetchSearchMovies = (movieSearch) => {\n    return axios.get(`${SEARCH_URL}&query=${movieSearch}`);\n}\n\nexport const fetchTopRatedMovies = () => {\n    return axios.get(`${TOP_RATED_URL}?api_key=${KEY}`)\n}\n\nexport const getMovieById = (movieId) => {\n    return axios.get(`${URL}/movie/${movieId}?api_key=${KEY}`)\n}\n\nexport const imageUrl = (imagePath) => {\n    return `${IMAGE_URL}${imagePath}`;\n}\n\nexport const getMovieReviews = (movieId) => {\n    return axios.get(`${URL}/movie/${movieId}/reviews?api_key=${KEY}`);\n}\n\nexport const getCast = (movieId) => {\n    return axios.get(`${URL}/movie/${movieId}/credits?api_key=${KEY}`);\n}","import { useSearchParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\"\nimport { fetchSearchMovies } from \"moviesAPI\";\nimport NotFound from \"./NotFound\";\nimport MovieList from \"components/components/MovieList\";\n\nexport default function Movies() {\n\n    const [movieSearch, setMovieSearch] = useSearchParams({ query: \"\" });\n    // const [searchResults, setSearchResults] = useState([]);\n    const [query, setQuery] = useState(\"\");\n    const [error, setError] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [movies, setMovies] = useState([]);\n\n    const link = movieSearch.get(\"query\");\n\n    const handleChangeSearch = e => {\n        const newSearchValue = e.target.value.toLowerCase();\n        setQuery(newSearchValue);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (query.trim() === '') {\n            return;\n        }\n        setMovieSearch({ query });\n    }\n\n    useEffect(() => {\n        const getSearchMovies = async () => {\n            try {\n                setLoading(true);\n                const { data } = await fetchSearchMovies(link);\n                setMovies(data.results);\n \n            } catch {\n                setError(true);\n            } finally {\n                setLoading(false);\n            }\n        }\n        getSearchMovies()\n    }, [link])\n\n    return (\n        <div>\n            <div>\n                {error && <NotFound />}\n                {loading && <h2>Please wait...</h2>}\n                <form onSubmit={handleSubmit}>\n                    <input placeholder=\"Let's find a movie for you\" onChange={handleChangeSearch} value={query}></input>\n                    <button type=\"submit\">Search</button>\n                </form>\n                {movies && <MovieList movies={movies} />}\n            </div>\n        </div>\n    )\n}","import { paths } from \"components/paths/paths\";\nimport { Link } from \"react-router-dom\";\n\nexport default function NotFound() {\n\n    return (\n        <div>\n            <div>\n                <Link to={paths.home} > GO HOME </Link> \n            </div>\n            <h1> Page is not found </h1>\n            <img src=\"https://i.pinimg.com/originals/11/dc/96/11dc96d2e4daca3ea8ff6aa41299b5e1.gif\" alt=\"what?\"></img>\n            \n        </div>\n    )\n}"],"names":["movies","location","useLocation","map","movie","to","generatePath","paths","movieId","id","state","from","title","original_title","URL","KEY","SEARCH_URL","fetchSearchMovies","movieSearch","axios","fetchTopRatedMovies","getMovieById","imageUrl","imagePath","getMovieReviews","getCast","Movies","useSearchParams","query","setMovieSearch","useState","setQuery","error","setError","loading","setLoading","setMovies","link","get","useEffect","getSearchMovies","data","results","onSubmit","e","preventDefault","trim","placeholder","onChange","newSearchValue","target","value","toLowerCase","type","NotFound","src","alt"],"sourceRoot":""}
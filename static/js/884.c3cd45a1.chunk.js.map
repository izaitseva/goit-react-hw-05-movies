{"version":3,"file":"static/js/884.c3cd45a1.chunk.js","mappings":"mSAEMA,EAAG,+BAEHC,EAAM,mCACNC,EAAU,UAAMF,EAAN,iCAAkCC,GAIrCE,EAAoB,SAACC,GAC9B,OAAOC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAAiCE,GAC3C,EAEYE,EAAsB,WAC/B,OAAOD,EAAAA,EAAAA,IAAA,UAXW,+CAWX,oBAAsCJ,GAChD,EAEYM,EAAiB,SAACC,GAC3B,OAAOH,EAAAA,EAAAA,IAAA,UAAaL,EAAb,kBAA0BQ,EAA1B,oBAA6CP,GACvD,EAEYQ,EAAW,SAACC,GACrB,MAAM,GAAN,OAfc,mCAed,OAAsBA,EACzB,EAEYC,EAAkB,SAACH,GAC5B,OAAOH,EAAAA,EAAAA,IAAA,UAAaL,EAAb,kBAA0BQ,EAA1B,4BAAqDP,GAC/D,EAEYW,EAAU,SAACJ,GACpB,OAAOH,EAAAA,EAAAA,IAAA,UAAaL,EAAb,kBAA0BQ,EAA1B,4BAAqDP,GAC/D,C,8FCgDD,UA1EqB,WAAO,IAAD,IAGfO,GADOK,EAAAA,EAAAA,MACPL,QACR,GAA0BM,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,QAArC,eAAOK,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,EAAQ,iBAAGJ,QAAH,IAAGA,GAAH,UAAGA,EAAUK,aAAb,aAAG,EAAiBC,YAApB,QAA4BC,EAAAA,EAAAA,KAmB1C,IAhBAC,EAAAA,EAAAA,YAAU,WACNX,GAAa,GACbE,EAAU,YAEVb,EAAAA,EAAAA,IAAeC,GACVsB,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACLf,EAASe,EACZ,IACAC,OAAM,SAACC,GACJb,EAAU,QACb,IACAc,SAAQ,WACLhB,GAAa,EAChB,GACR,GAAE,CAACV,IAEW,SAAXW,GAAqBF,EACrB,OAAO,6CAGX,GAAe,UAAXE,EACA,OAAO,gEACH,SAAC,KAAD,CAAMgB,GAAIP,EAAAA,EAAAA,KAAV,sBAIR,IAAMQ,EAAI,mBAAQrB,QAAR,IAAQA,OAAR,EAAQA,EAAOsB,aAAaC,MAAM,KAAK,GAAvC,KACJC,EAAI,OAAGxB,QAAH,IAAGA,OAAH,EAAGA,EAAOyB,aAAaC,QAAQ,GACnCC,GAAMjC,EAAAA,EAAAA,IAAQ,OAACM,QAAD,IAACA,OAAD,EAACA,EAAO4B,aAE5B,OACI,4BAEI,mBAAQC,QAnCI,kBAAMrB,EAASE,EAAf,EAmCZ,sBACA,2BACKV,EAAM4B,aACD,gBAAKE,IAAKH,EAAKI,IAAI,cAAcC,MAAO,OACxC,gBAAKF,IAAI,uBAAuBC,IAAI,SAASC,MAAO,OAE1D,+BAAW,OAALhC,QAAK,IAALA,OAAA,EAAAA,EAAOiC,OAAQZ,EAArB,QACA,yCAAiBG,MACjB,sCACA,8BAAIxB,QAAJ,IAAIA,OAAJ,EAAIA,EAAOkC,YACX,oCACA,8BAAIlC,QAAJ,IAAIA,OAAJ,EAAIA,EAAOmC,OAAOC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,IAAN,IAAYC,KAAK,YAG5C,4BACI,mDACA,4BACI,SAAC,KAAD,CAAMnB,GAAIP,EAAAA,EAAAA,KAAYF,MAAO,CAACC,KAAMF,GAApC,mBACA,SAAC,KAAD,CAAMU,GAAIP,EAAAA,EAAAA,QAAeF,MAAO,CAACC,KAAMF,GAAvC,4BAGR,SAAC,EAAA8B,SAAD,CAAUC,UAAU,wCAApB,UACI,SAAC,KAAD,QAIf,C","sources":["moviesAPI.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst URL = `https://api.themoviedb.org/3`\nconst TOP_RATED_URL = \"https://api.themoviedb.org/3/movie/top_rated\";\nconst KEY = \"c86b3c21f50eab5c7ad4f0c864f19af2\";\nconst SEARCH_URL = `${URL}/search/movie?api_key=${KEY}`;\n\nconst IMAGE_URL = \"https://image.tmdb.org/t/p/w500\";\n\nexport const fetchSearchMovies = (movieSearch) => {\n    return axios.get(`${SEARCH_URL}&query=${movieSearch}`);\n}\n\nexport const fetchTopRatedMovies = () => {\n    return axios.get(`${TOP_RATED_URL}?api_key=${KEY}`)\n}\n\nexport const fetchMovieById = (movieId) => {\n    return axios.get(`${URL}/movie/${movieId}?api_key=${KEY}`)\n}\n\nexport const imageUrl = (imagePath) => {\n    return `${IMAGE_URL}${imagePath}`;\n}\n\nexport const getMovieReviews = (movieId) => {\n    return axios.get(`${URL}/movie/${movieId}/reviews?api_key=${KEY}`);\n}\n\nexport const getCast = (movieId) => {\n    return axios.get(`${URL}/movie/${movieId}/credits?api_key=${KEY}`);\n}","import { fetchMovieById, imageUrl } from \"moviesAPI\";\nimport { paths } from \"components/paths/paths\";\nimport { Suspense, useEffect, useState } from \"react\";\nimport { Link, Outlet, useLocation, useNavigate, useParams } from \"react-router-dom\";\n\nconst MovieDetails = () => {\n\n    const params = useParams();\n    const { movieId } = params;\n    const [movie, setMovie] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [status, setStatus] = useState('idle');\n    const location = useLocation();\n    const navigate = useNavigate();\n\n    const linkBack = location?.state?.from ?? paths.home;\n    const handleClick = () => navigate(linkBack);\n\n    useEffect(() => {\n        setIsLoading(true);\n        setStatus('loading');\n\n        fetchMovieById(movieId)\n            .then(({ data }) => {\n                setMovie(data)\n            })\n            .catch((error) => {\n                setStatus('error')\n            })\n            .finally(() => {\n                setIsLoading(false);\n            })\n    }, [movieId]);\n\n    if (status === 'idle' || isLoading) {\n        return <>Loading...</>;\n    }\n\n    if (status === 'error') {\n        return <div>There was an error. Please return\n            <Link to={paths.home}> HOME</Link>\n        </div>\n    }\n\n    const date = ` (${movie?.release_date.split('-')[0]})`;\n    const vote = movie?.vote_average.toFixed(1);\n    const img = imageUrl(movie?.poster_path);\n\n    return (\n        <div>\n\n            <button onClick={handleClick}>Go back</button>\n            <div>\n                {movie.poster_path\n                    ? <img src={img} alt=\"actor's pic\" width={350} />\n                    : <img src=\"https://rb.gy/ycrvka\" alt=\"no pic\" width={350} />\n                }\n                <h2> {movie?.title + date} </h2>\n                <p>User rating: {vote}</p>\n                <h4>Overview</h4>\n                <p>{movie?.overview}</p>\n                <h4>Genres</h4>\n                <p>{movie?.genres.map(x => x.name).join(', ')}</p>\n            </div>\n\n            <div>\n                <p>Additional information</p>\n                <div>\n                    <Link to={paths.cast} state={{from: linkBack}}>Cast</Link>\n                    <Link to={paths.reviews} state={{from: linkBack}}>Reviews</Link>\n                </div>\n            </div>\n            <Suspense fallback={<p>Loading Page</p>}>\n                <Outlet />\n            </Suspense>\n        </div>\n    )\n}\n\nexport default MovieDetails;"],"names":["URL","KEY","SEARCH_URL","fetchSearchMovies","movieSearch","axios","fetchTopRatedMovies","fetchMovieById","movieId","imageUrl","imagePath","getMovieReviews","getCast","useParams","useState","movie","setMovie","isLoading","setIsLoading","status","setStatus","location","useLocation","navigate","useNavigate","linkBack","state","from","paths","useEffect","then","data","catch","error","finally","to","date","release_date","split","vote","vote_average","toFixed","img","poster_path","onClick","src","alt","width","title","overview","genres","map","x","name","join","Suspense","fallback"],"sourceRoot":""}
{"version":3,"file":"static/js/299.b881c524.chunk.js","mappings":"oSAEMA,EAAG,+BAEHC,EAAM,mCACNC,EAAU,UAAMF,EAAN,iCAAkCC,GAIrCE,EAAoB,SAACC,GAC9B,OAAOC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAAiCE,GAC3C,EAEYE,EAAsB,WAC/B,OAAOD,EAAAA,EAAAA,IAAA,UAXW,+CAWX,oBAAsCJ,GAChD,EAEYM,EAAiB,SAACC,GAC3B,OAAOH,EAAAA,EAAAA,IAAA,UAAaL,EAAb,kBAA0BQ,EAA1B,oBAA6CP,GACvD,EAEYQ,EAAW,SAACC,GACrB,MAAM,GAAN,OAfc,mCAed,OAAsBA,EACzB,EAEYC,EAAkB,SAACH,GAC5B,OAAOH,EAAAA,EAAAA,IAAA,UAAaL,EAAb,kBAA0BQ,EAA1B,4BAAqDP,GAC/D,EAEYW,EAAU,SAACJ,GACpB,OAAOH,EAAAA,EAAAA,IAAA,UAAaL,EAAb,kBAA0BQ,EAA1B,4BAAqDP,GAC/D,C,8ECWD,UAtCgB,WAEZ,IACQO,GADOK,EAAAA,EAAAA,MACPL,QACR,GAA4BM,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KAaA,OAXAC,EAAAA,EAAAA,YAAU,YAENR,EAAAA,EAAAA,IAAgBH,GACXY,MAAK,YAA4B,IAAjBC,EAAgB,EAAxBC,KAAQD,QACbL,EAAUK,EACb,IACAE,OAAM,WACHL,EAAU,QACb,GACR,GAAE,CAACV,IAEW,UAAXS,GAAwC,IAAlBF,EAAOS,QACtB,kDAIP,+BAEQT,QAFR,IAEQA,OAFR,EAEQA,EAAQU,KAAI,SAAAC,GAAC,OACT,2BACI,4CAAaA,QAAb,IAAaA,OAAb,EAAaA,EAAGC,eAAeC,SAA/B,QACA,8BAAIF,QAAJ,IAAIA,OAAJ,EAAIA,EAAGG,YAFFH,EAAEI,GADF,KAW5B,C","sources":["components/API/moviesAPI.jsx","components/components/Reviews.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst URL = `https://api.themoviedb.org/3`\nconst TOP_RATED_URL = \"https://api.themoviedb.org/3/movie/top_rated\";\nconst KEY = \"c86b3c21f50eab5c7ad4f0c864f19af2\";\nconst SEARCH_URL = `${URL}/search/movie?api_key=${KEY}`;\n\nconst IMAGE_URL = \"https://image.tmdb.org/t/p/w500\";\n\nexport const fetchSearchMovies = (movieSearch) => {\n    return axios.get(`${SEARCH_URL}&query=${movieSearch}`);\n}\n\nexport const fetchTopRatedMovies = () => {\n    return axios.get(`${TOP_RATED_URL}?api_key=${KEY}`)\n}\n\nexport const fetchMovieById = (movieId) => {\n    return axios.get(`${URL}/movie/${movieId}?api_key=${KEY}`)\n}\n\nexport const imageUrl = (imagePath) => {\n    return `${IMAGE_URL}${imagePath}`;\n}\n\nexport const getMovieReviews = (movieId) => {\n    return axios.get(`${URL}/movie/${movieId}/reviews?api_key=${KEY}`);\n}\n\nexport const getCast = (movieId) => {\n    return axios.get(`${URL}/movie/${movieId}/credits?api_key=${KEY}`);\n}","import { getMovieReviews } from \"components/API/moviesAPI\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst Reviews = () => {\n\n    const params = useParams();\n    const { movieId } = params;\n    const [review, setReview] = useState([]);\n    const [status, setStatus] = useState('idle');\n\n    useEffect(() => {\n\n        getMovieReviews(movieId)\n            .then(({ data: { results } }) => {\n                setReview(results)\n            })\n            .catch(() => {\n                setStatus('error')\n            })\n    }, [movieId]);\n\n    if (status === 'error' || review.length === 0) {\n        return <p>There are no reviews.</p>\n    }\n\n    return (\n        <ul>\n            {\n                review?.map(x => (\n                    <li key={x.id}>\n                        <h4>Author: {x?.author_details.username} </h4>\n                        <p>{x?.content}</p>\n                    </li>\n\n                ))\n            }\n        </ul>\n    )\n\n}\n\nexport default Reviews;"],"names":["URL","KEY","SEARCH_URL","fetchSearchMovies","movieSearch","axios","fetchTopRatedMovies","fetchMovieById","movieId","imageUrl","imagePath","getMovieReviews","getCast","useParams","useState","review","setReview","status","setStatus","useEffect","then","results","data","catch","length","map","x","author_details","username","content","id"],"sourceRoot":""}
{"version":3,"file":"static/js/884.1b8b0fda.chunk.js","mappings":"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","sources":["moviesAPI.jsx","pages/MovieDetails.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import axios from \"axios\";\n\nconst URL = `https://api.themoviedb.org/3`\nconst TOP_RATED_URL = \"https://api.themoviedb.org/3/movie/top_rated\";\nconst KEY = \"c86b3c21f50eab5c7ad4f0c864f19af2\";\nconst SEARCH_URL = `${URL}/search/movie?api_key=${KEY}`;\n\nconst IMAGE_URL = \"https://image.tmdb.org/t/p/w500\";\n\nexport const fetchSearchMovies = (movieSearch) => {\n    return axios.get(`${SEARCH_URL}&query=${movieSearch}`);\n}\n\nexport const fetchTopRatedMovies = () => {\n    return axios.get(`${TOP_RATED_URL}?api_key=${KEY}`)\n}\n\nexport const getMovieById = (movieId) => {\n    return axios.get(`${URL}/movie/${movieId}?api_key=${KEY}`)\n}\n\nexport const imageUrl = (imagePath) => {\n    return `${IMAGE_URL}${imagePath}`;\n}\n\nexport const getMovieReviews = (movieId) => {\n    return axios.get(`${URL}/movie/${movieId}/reviews?api_key=${KEY}`);\n}\n\nexport const getCast = (movieId) => {\n    return axios.get(`${URL}/movie/${movieId}/credits?api_key=${KEY}`);\n}","import { getMovieById, imageUrl } from \"moviesAPI\";\nimport { paths } from \"components/paths/paths\";\nimport { Suspense, useEffect, useState } from \"react\";\nimport { Link, Outlet, useLocation, useNavigate, useParams } from \"react-router-dom\";\n\nconst MovieDetails = () => {\n\n    const params = useParams();\n    const { movieId } = params;\n    const [movie, setMovie] = useState(null);\n\n    const [loading, setLoading] = useState(false);\n    \n    const [error, setError] = useState(false);\n    const location = useLocation();\n    const navigate = useNavigate();\n\n    const linkBack = location?.state?.from ?? paths.home;\n    const handleClick = () => navigate(linkBack);\n\n    useEffect(() => {\n\n        const getMovie = async () => {\n            try {\n                setLoading(true);\n                const {data} = await getMovieById(movieId);\n                setMovie(data);\n            } catch {\n                setError(true);\n            } finally {\n                setLoading(false);\n            }\n            \n\n        };\n        getMovie();\n    }, [movieId]);\n\n    if (loading) {\n        return <>Loading...</>;\n    }\n\n    if (error) {\n        return <div>There was an error. Please return\n            <Link to={paths.home}>HOME</Link>\n        </div>\n    }\n\n    const date = ` (${movie?.release_date.split('-')[0]})`;\n    const vote = movie?.vote_average.toFixed(1);\n    const img = imageUrl(movie?.poster_path);\n\n    return (\n        <div>\n\n            <button onClick={handleClick}>Go back</button>\n            <div>\n                {movie?.poster_path\n                    ? <img src={img} alt=\"actor's pic\" width={350} />\n                    : <img src=\"https://rb.gy/ycrvka\" alt=\"no pic\" width={350} />\n                }\n                <h2> {movie?.title + date} </h2>\n                <p>User rating: {vote}</p>\n                <h4>Overview</h4>\n                <p>{movie?.overview}</p>\n                <h4>Genres</h4>\n                <p>{movie?.genres.map(x => x.name).join(', ')}</p>\n            </div>\n\n            <div>\n                <p>Additional information</p>\n                <div>\n                    <Link to={paths.cast} state={{from: linkBack}}>Cast</Link>\n                    <Link to={paths.reviews} state={{from: linkBack}}>Reviews</Link>\n                </div>\n            </div>\n            <Suspense fallback={<p>Loading Page</p>}>\n                <Outlet />\n            </Suspense>\n        </div>\n    )\n}\n\nexport default MovieDetails;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["URL","KEY","SEARCH_URL","fetchSearchMovies","movieSearch","axios","fetchTopRatedMovies","getMovieById","movieId","imageUrl","imagePath","getMovieReviews","getCast","useParams","useState","movie","setMovie","loading","setLoading","error","setError","location","useLocation","navigate","useNavigate","linkBack","state","from","paths","useEffect","getMovie","data","to","date","release_date","split","vote","vote_average","toFixed","img","poster_path","onClick","src","alt","width","title","overview","genres","map","x","name","join","Suspense","fallback","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}
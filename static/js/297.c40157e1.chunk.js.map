{"version":3,"file":"static/js/297.c40157e1.chunk.js","mappings":"oSAEMA,EAAG,+BAEHC,EAAM,mCACNC,EAAU,UAAMF,EAAN,iCAAkCC,GAIrCE,EAAoB,SAACC,GAC9B,OAAOC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAAiCE,GAC3C,EAEYE,EAAsB,WAC/B,OAAOD,EAAAA,EAAAA,IAAA,UAXW,+CAWX,oBAAsCJ,GAChD,EAEYM,EAAiB,SAACC,GAC3B,OAAOH,EAAAA,EAAAA,IAAA,UAAaL,EAAb,kBAA0BQ,EAA1B,oBAA6CP,GACvD,EAEYQ,EAAW,SAACC,GACrB,MAAM,GAAN,OAfc,mCAed,OAAsBA,EACzB,EAEYC,EAAkB,SAACH,GAC5B,OAAOH,EAAAA,EAAAA,IAAA,UAAaL,EAAb,kBAA0BQ,EAA1B,4BAAqDP,GAC/D,EAEYW,EAAU,SAACJ,GACpB,OAAOH,EAAAA,EAAAA,IAAA,UAAaL,EAAb,kBAA0BQ,EAA1B,4BAAqDP,GAC/D,C,oHC3Bc,SAASY,IAEpB,IACQL,GADOM,EAAAA,EAAAA,MACPN,QACR,GAAwBO,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KAYA,OAVAC,EAAAA,EAAAA,YAAU,YACNR,EAAAA,EAAAA,IAAQJ,GACHa,MAAK,YAAyB,IAAdL,EAAa,EAArBM,KAAQN,KACbC,EAAQD,EACX,IACAO,OAAM,WACHJ,GAAS,EACZ,GACR,GAAE,CAACX,KAGA,2BACKU,IAAS,yDACV,+BACKF,QADL,IACKA,OADL,EACKA,EAAMQ,KAAI,SAAAC,GAAC,OACR,0BACKA,EAAEC,cACG,gBAAKC,KAAKlB,EAAAA,EAAAA,IAASgB,EAAEC,cAAeE,IAAI,cAAcC,MAAO,MAC7D,gBAAKF,IAAI,uBAAuBC,IAAI,SAASC,MAAO,MAE1D,wBAAKJ,EAAEK,QACP,uCAAeL,EAAEM,eANZN,EAAEO,GADH,QAa3B,C","sources":["components/API/moviesAPI.jsx","components/components/Cast.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst URL = `https://api.themoviedb.org/3`\nconst TOP_RATED_URL = \"https://api.themoviedb.org/3/movie/top_rated\";\nconst KEY = \"c86b3c21f50eab5c7ad4f0c864f19af2\";\nconst SEARCH_URL = `${URL}/search/movie?api_key=${KEY}`;\n\nconst IMAGE_URL = \"https://image.tmdb.org/t/p/w500\";\n\nexport const fetchSearchMovies = (movieSearch) => {\n    return axios.get(`${SEARCH_URL}&query=${movieSearch}`);\n}\n\nexport const fetchTopRatedMovies = () => {\n    return axios.get(`${TOP_RATED_URL}?api_key=${KEY}`)\n}\n\nexport const fetchMovieById = (movieId) => {\n    return axios.get(`${URL}/movie/${movieId}?api_key=${KEY}`)\n}\n\nexport const imageUrl = (imagePath) => {\n    return `${IMAGE_URL}${imagePath}`;\n}\n\nexport const getMovieReviews = (movieId) => {\n    return axios.get(`${URL}/movie/${movieId}/reviews?api_key=${KEY}`);\n}\n\nexport const getCast = (movieId) => {\n    return axios.get(`${URL}/movie/${movieId}/credits?api_key=${KEY}`);\n}","import { getCast, imageUrl } from \"components/API/moviesAPI\"\nimport { useEffect, useState } from \"react\"\nimport { useParams } from \"react-router-dom\";\n\nexport default function Cast() {\n\n    const params = useParams();\n    const { movieId } = params;\n    const [cast, setCast] = useState([]);\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n        getCast(movieId)\n            .then(({ data: { cast } }) => {\n                setCast(cast)\n            })\n            .catch(() => {\n                setError(true)\n            })\n    }, [movieId])\n\n    return (\n        <div>\n            {error && <h2>There's nothing to see here</h2>}\n            <ul>\n                {cast?.map(x => (\n                    <li key={x.id}>\n                        {x.profile_path\n                            ? <img src={imageUrl(x.profile_path)} alt=\"actor's pic\" width={90} />\n                            : <img src=\"https://rb.gy/ycrvka\" alt=\"no pic\" width={90} />\n                        }\n                        <h4>{x.name}</h4>\n                        <p>Character: {x.character}</p>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    )\n}"],"names":["URL","KEY","SEARCH_URL","fetchSearchMovies","movieSearch","axios","fetchTopRatedMovies","fetchMovieById","movieId","imageUrl","imagePath","getMovieReviews","getCast","Cast","useParams","useState","cast","setCast","error","setError","useEffect","then","data","catch","map","x","profile_path","src","alt","width","name","character","id"],"sourceRoot":""}
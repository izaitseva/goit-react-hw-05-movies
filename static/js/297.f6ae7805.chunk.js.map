{"version":3,"file":"static/js/297.f6ae7805.chunk.js","mappings":"sPAKe,SAASA,IAEpB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAS,mCAAG,sGAEVF,GAAW,GAFD,UAGuBG,EAAAA,EAAAA,IAAQX,GAH/B,gBAGMG,EAHN,EAGFS,KAAQT,KAChBC,EAAQD,GAJE,gDAMVG,GAAS,GANC,yBAQVE,GAAW,GARD,4EAAH,qDAYfE,GACH,GAAE,CAACV,KAGA,2BACKK,IAAS,wDACTE,IAAW,4CACZ,+BACKJ,QADL,IACKA,OADL,EACKA,EAAMU,KAAI,SAAAV,GAAI,OACX,0BACKA,EAAKW,cACA,gBAAKC,KAAKC,EAAAA,EAAAA,IAASb,EAAKW,cAAeG,IAAI,cAAcC,MAAO,MAChE,gBAAKH,IAAI,uBAAuBE,IAAI,SAASC,MAAO,MAE1D,wBAAKf,EAAKgB,QACV,uCAAehB,EAAKiB,eANfjB,EAAKkB,GADH,QAa9B,C,2LC5CKC,EAAG,+BAEHC,EAAM,mCACNC,EAAU,UAAMF,EAAN,iCAAkCC,GAIrCE,EAAoB,SAACC,GAC9B,OAAOC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAAiCE,GAC3C,EAEYE,EAAsB,WAC/B,OAAOD,EAAAA,EAAAA,IAAA,UAXW,+CAWX,oBAAsCJ,GAChD,EAEYM,EAAe,SAAC7B,GACzB,OAAO2B,EAAAA,EAAAA,IAAA,UAAaL,EAAb,kBAA0BtB,EAA1B,oBAA6CuB,GACvD,EAEYP,EAAW,SAACc,GACrB,MAAM,GAAN,OAfc,mCAed,OAAsBA,EACzB,EAEYC,EAAkB,SAAC/B,GAC5B,OAAO2B,EAAAA,EAAAA,IAAA,UAAaL,EAAb,kBAA0BtB,EAA1B,4BAAqDuB,GAC/D,EAEYZ,EAAU,SAACX,GACpB,OAAO2B,EAAAA,EAAAA,IAAA,UAAaL,EAAb,kBAA0BtB,EAA1B,4BAAqDuB,GAC/D,C,sBC/BD,SAASS,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOpC,GAEP,YADA8B,EAAO9B,EAET,CAEImC,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["components/components/Cast.jsx","moviesAPI.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { getCast, imageUrl } from \"moviesAPI\";\n\nimport { useEffect, useState } from \"react\"\nimport { useParams } from \"react-router-dom\";\n\nexport default function Cast() {\n\n    const { movieId } = useParams();\n    const [cast, setCast] = useState([]);\n    const [error, setError] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        const fetchCast = async () => {\n            try {\n                setLoading(true);\n                const { data: { cast } } = await getCast(movieId)\n                setCast(cast)\n            } catch {\n                setError(true);\n            } finally {\n                setLoading(false);\n            }\n\n        }\n        fetchCast()\n    }, [movieId])\n\n    return (\n        <div>\n            {error && <h2>There's nothing to see here</h2>}\n            {loading && <h2>Please wait...</h2>}\n            <ul>\n                {cast?.map(cast => (\n                    <li key={cast.id}>\n                        {cast.profile_path\n                            ? <img src={imageUrl(cast.profile_path)} alt=\"actor's pic\" width={90} />\n                            : <img src=\"https://rb.gy/ycrvka\" alt=\"no pic\" width={90} />\n                        }\n                        <h4>{cast.name}</h4>\n                        <p>Character: {cast.character}</p>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    )\n}","import axios from \"axios\";\n\nconst URL = `https://api.themoviedb.org/3`\nconst TOP_RATED_URL = \"https://api.themoviedb.org/3/movie/top_rated\";\nconst KEY = \"c86b3c21f50eab5c7ad4f0c864f19af2\";\nconst SEARCH_URL = `${URL}/search/movie?api_key=${KEY}`;\n\nconst IMAGE_URL = \"https://image.tmdb.org/t/p/w500\";\n\nexport const fetchSearchMovies = (movieSearch) => {\n    return axios.get(`${SEARCH_URL}&query=${movieSearch}`);\n}\n\nexport const fetchTopRatedMovies = () => {\n    return axios.get(`${TOP_RATED_URL}?api_key=${KEY}`)\n}\n\nexport const getMovieById = (movieId) => {\n    return axios.get(`${URL}/movie/${movieId}?api_key=${KEY}`)\n}\n\nexport const imageUrl = (imagePath) => {\n    return `${IMAGE_URL}${imagePath}`;\n}\n\nexport const getMovieReviews = (movieId) => {\n    return axios.get(`${URL}/movie/${movieId}/reviews?api_key=${KEY}`);\n}\n\nexport const getCast = (movieId) => {\n    return axios.get(`${URL}/movie/${movieId}/credits?api_key=${KEY}`);\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["Cast","movieId","useParams","useState","cast","setCast","error","setError","loading","setLoading","useEffect","fetchCast","getCast","data","map","profile_path","src","imageUrl","alt","width","name","character","id","URL","KEY","SEARCH_URL","fetchSearchMovies","movieSearch","axios","fetchTopRatedMovies","getMovieById","imagePath","getMovieReviews","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}
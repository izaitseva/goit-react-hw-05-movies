{"version":3,"file":"static/js/299.41a1a45f.chunk.js","mappings":"gNA+CA,UA3CgB,WAEZ,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,WAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WAEN,IAAMC,EAAiB,mCAAG,sGAElBJ,GAAW,GAFO,UAGkBK,EAAAA,EAAAA,IAAgBX,GAHlC,gBAGFY,EAHE,EAGVC,KAAQD,QAChBR,EAAUQ,GAJQ,gDAMlBJ,GAAS,GANS,yBAQlBF,GAAW,GARO,4EAAH,qDAWvBI,GACH,GAAE,CAACV,KAGA,2BACKO,IAAS,mDACTF,IAAW,2CACZ,+BAEQF,QAFR,IAEQA,OAFR,EAEQA,EAAQW,KAAI,SAAAX,GAAM,OACd,2BACI,4CAAaA,QAAb,IAAaA,OAAb,EAAaA,EAAQY,eAAeC,SAApC,QACA,8BAAIb,QAAJ,IAAIA,OAAJ,EAAIA,EAAQc,YAFPd,EAAOe,GADF,QAYrC,C,2LC3CKC,EAAG,+BAEHC,EAAM,mCACNC,EAAU,UAAMF,EAAN,iCAAkCC,GAIrCE,EAAoB,SAACC,GAC9B,OAAOC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAAiCE,GAC3C,EAEYE,EAAsB,WAC/B,OAAOD,EAAAA,EAAAA,IAAA,UAXW,+CAWX,oBAAsCJ,GAChD,EAEYM,EAAe,SAAC1B,GACzB,OAAOwB,EAAAA,EAAAA,IAAA,UAAaL,EAAb,kBAA0BnB,EAA1B,oBAA6CoB,GACvD,EAEYO,EAAW,SAACC,GACrB,MAAM,GAAN,OAfc,mCAed,OAAsBA,EACzB,EAEYjB,EAAkB,SAACX,GAC5B,OAAOwB,EAAAA,EAAAA,IAAA,UAAaL,EAAb,kBAA0BnB,EAA1B,4BAAqDoB,GAC/D,EAEYS,EAAU,SAAC7B,GACpB,OAAOwB,EAAAA,EAAAA,IAAA,UAAaL,EAAb,kBAA0BnB,EAA1B,4BAAqDoB,GAC/D,C,sBC/BD,SAASU,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOhC,GAEP,YADA0B,EAAO1B,EAET,CAEI+B,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["components/components/Reviews.jsx","moviesAPI.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { getMovieReviews } from \"moviesAPI\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst Reviews = () => {\n\n    const { movieId } = useParams();\n    const [review, setReview] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n\n        const fetchMovieReviews = async () => {\n            try {\n                setLoading(true);\n                const { data: { results } } = await getMovieReviews(movieId)\n                setReview(results)\n            } catch {\n                setError(true);\n            } finally {\n                setLoading(false);\n            }\n        }\n        fetchMovieReviews();\n    }, [movieId]);\n\n    return (\n        <div>\n            {error && <p>There are no reviews...</p>}\n            {loading && <p>Please wait...</p>}\n            <ul>\n                {\n                    review?.map(review => (\n                        <li key={review.id}>\n                            <h4>Author: {review?.author_details.username} </h4>\n                            <p>{review?.content}</p>\n                        </li>\n\n                    ))\n                }\n            </ul>\n        </div>\n    )\n\n}\n\nexport default Reviews;","import axios from \"axios\";\n\nconst URL = `https://api.themoviedb.org/3`\nconst TOP_RATED_URL = \"https://api.themoviedb.org/3/movie/top_rated\";\nconst KEY = \"c86b3c21f50eab5c7ad4f0c864f19af2\";\nconst SEARCH_URL = `${URL}/search/movie?api_key=${KEY}`;\n\nconst IMAGE_URL = \"https://image.tmdb.org/t/p/w500\";\n\nexport const fetchSearchMovies = (movieSearch) => {\n    return axios.get(`${SEARCH_URL}&query=${movieSearch}`);\n}\n\nexport const fetchTopRatedMovies = () => {\n    return axios.get(`${TOP_RATED_URL}?api_key=${KEY}`)\n}\n\nexport const getMovieById = (movieId) => {\n    return axios.get(`${URL}/movie/${movieId}?api_key=${KEY}`)\n}\n\nexport const imageUrl = (imagePath) => {\n    return `${IMAGE_URL}${imagePath}`;\n}\n\nexport const getMovieReviews = (movieId) => {\n    return axios.get(`${URL}/movie/${movieId}/reviews?api_key=${KEY}`);\n}\n\nexport const getCast = (movieId) => {\n    return axios.get(`${URL}/movie/${movieId}/credits?api_key=${KEY}`);\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movieId","useParams","useState","review","setReview","loading","setLoading","error","setError","useEffect","fetchMovieReviews","getMovieReviews","results","data","map","author_details","username","content","id","URL","KEY","SEARCH_URL","fetchSearchMovies","movieSearch","axios","fetchTopRatedMovies","getMovieById","imageUrl","imagePath","getCast","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}